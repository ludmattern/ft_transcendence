services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    networks:
      - ft_network

  user-service:
    build:
      context: ./backend/user-service
      dockerfile: Dockerfile
    networks:
      - ft_network

  auth-service:
    build:
      context: ./backend/auth-service
      dockerfile: Dockerfile
    networks:
      - ft_network
 
  chat-service:
    build:
      context: ./backend/chat-service
      dockerfile: Dockerfile
    networks:
      - ft_network

  game-service:
    build:
      context: ./backend/game-service
      dockerfile: Dockerfile
    networks:
      - ft_network

  tournament-service:
    build:
      context: ./backend/tournament-service
      dockerfile: Dockerfile
    networks:
      - ft_network

  nginx:
    image: nginx:latest
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8080:8080"    # Expose port 8080 for external access
    depends_on:
      - frontend
      - user-service
      - auth-service
      - chat-service
      - game-service
      - tournament-service
    networks:
      - ft_network

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data  # Volume pour persister les donn√©es
      - ./database/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql  # Script d'initialisation
    ports:
      - "5432:5432"
    networks:
      - ft_network

networks:
  ft_network:
    driver: bridge

volumes:
  postgres_data:

